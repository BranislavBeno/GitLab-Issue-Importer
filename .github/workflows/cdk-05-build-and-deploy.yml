# This workflow builds the Docker image for the gitlab-issue-importer and then deploys the application.
name: 04 - Build and deploy the app

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-22.04
    name: Build and publish the application
    outputs:
      DOCKER_IMAGE_TAG: ${{ steps.create-docker-image-tag.outputs.DOCKER_IMAGE_TAG }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          java-package: jdk
          cache: 'gradle'

      - name: Build application
        run: ./gradlew :app:build -x :app:test

      - name: Create Docker image tag
        id: create-docker-image-tag
        run: echo "DOCKER_IMAGE_TAG=$(date +'%Y%m%d%H%M%S')-${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Publish Docker image to ECR registry
        if: github.ref == 'refs/heads/main' || contains(github.event.head_commit.message, 'DEPLOY NOW')
        env:
          DOCKER_IMAGE_TAG: ${{ steps.create-docker-image-tag.outputs.DOCKER_IMAGE_TAG }}
        run: |
          docker build -t gitlab-issue-importer .
          docker tag gitlab-issue-importer ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/gitlab-issue-importer:${DOCKER_IMAGE_TAG}
          docker tag gitlab-issue-importer ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/gitlab-issue-importer:latest
          aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/gitlab-issue-importer:${DOCKER_IMAGE_TAG}
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/gitlab-issue-importer:latest

  deploy:
    runs-on: ubuntu-22.04
    name: Deploy the application
    needs: build-and-publish
    timeout-minutes: 15
    if: github.ref == 'refs/heads/main'
    concurrency: gitlab-issue-importer-deployment
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          java-package: jdk
          cache: 'gradle'

      - name: NPM install
        working-directory: cdk
        run: |
          npm i -D aws-cdk@latest
          rm -fr node_modules package-lock.json cdk.out
          npm i

      - name: Deploy service stack to staging
        working-directory: cdk
        env:
          DOCKER_IMAGE_TAG: ${{ needs.build-and-publish.outputs.DOCKER_IMAGE_TAG }}
        run: npm run service:deploy -- -c dockerImageTag=${DOCKER_IMAGE_TAG} -c environmentName=staging
