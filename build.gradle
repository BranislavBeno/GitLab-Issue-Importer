plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
    id 'org.sonarqube' version '3.5.0.2730'
    id 'com.gorylenko.gradle-git-properties' version '2.4.1'
    id 'com.github.ben-manes.versions' version '0.44.0'
}

group = 'com.issue.importer'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
version = "R${versionMajor}.${versionMinor}.${versionPatch}" as Object

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}

ext {
    set('sonarProjectName', 'GitlabIssueImporter') as Object
    set('sonarProjectKey', 'com.issue.importer') as Object
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.10.3'
    implementation 'com.opencsv:opencsv:5.7.1'
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'org.yaml:snakeyaml:1.33'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:selenium'
    testImplementation 'com.codeborne:selenide:6.11.1'
    testImplementation 'com.github.tomakehurst:wiremock:3.0.0-beta-2'
}

dependencyManagement {
    imports {
        mavenBom 'org.testcontainers:testcontainers-bom:1.17.6'
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}

springBoot {
    buildInfo()
}

jacoco {
    toolVersion = '0.8.8'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "BranislavBeno_GitlabIssueImporter"
    }
}

bootJar {
    archiveFileName = "gitlab-issue-importer.jar"
}

bootBuildImage {
    imageName = "beo1975/gitlab-issue-importer:${versionMajor}.${versionMinor}.${versionPatch}"
}
